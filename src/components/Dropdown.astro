---
import { Image } from "astro:assets";

interface Props {
  open?: boolean;
  summary: string;
  content: string;
  image?: ImageMetadata;
  imageAlt?: string;
}

/* 
  Default details implementation:
  If it's open then open=""
  If it's closed then open=null
*/

const { open = null, summary, content, image, imageAlt } = Astro.props;
const openValue = open ? "" : null;
---

<astro-details>
  <details open={openValue}>
    <summary>
      {summary}
      <div class="button"></div>
      {
        image && imageAlt ? (
          <div class="decoration-container">
            <Image src={image} alt={imageAlt} />
          </div>
        ) : null
      }
    </summary>
    <p>{content}</p>
  </details>

  <script>
    class AstroDetails extends HTMLElement {
      constructor() {
        super();

        const details = this.querySelector("details");
        const summary = this.querySelector("summary");
        const button = this.querySelector(".button") as HTMLElement;

        if (!button || !details || !summary) return;

        if (details.getAttribute("open") === "") {
          button.style.transform = "rotate(-45deg)";
        }

        summary.addEventListener("click", (event) => {
          const open = details.getAttribute("open");

          if (open === "") {
            button.style.transform = "rotate(0deg)";
          } else {
            button.style.transform = "rotate(-45deg)";
          }
        });
      }
    }

    customElements.define("astro-details", AstroDetails);
  </script>

  <style lang="scss">
    @use "../styles/tokens/tokens" as t;
    $bp-tablet: 40rem;

    astro-details {
      z-index: 1;
      max-width: 36rem;
      width: 100%;
      background-color: white;
      border-radius: t.$br-main;
      box-shadow: t.$s-main;

      &:nth-of-type(even) {
        margin-left: auto;
      }
    }

    summary {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1.25rem 1.5rem;
      font-size: 1.25rem;
      font-weight: 400;
      font-family: t.$ff-poppy;
      letter-spacing: 0.0469rem;
      color: white;
      background: center / cover no-repeat
        url("../assets/paper-background.webp") t.$clr-green;
      border-radius: t.$br-main;
      box-shadow: t.$s-main;
      cursor: pointer;

      .decoration-container {
        position: absolute;
        content: "";
        width: 6rem;
        height: 6rem;
        top: 0;
        left: 0;
        z-index: -1;
        border-radius: 100%;
        box-shadow: t.$s-main;
        transform: translate(-55%, -55%);
        pointer-events: none;

        @media (max-width: t.$bp-desktop) {
          display: none;
        }

        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          border-radius: inherit;
        }
      }

      &::-webkit-details-marker {
        display: none;
      }
    }

    details {
      font-size: clamp(1rem, 1rem + 0.125vw, 1.125rem);
    }

    div.button {
      width: 1.125rem;
      height: 1.125rem;
      border: transparent;
      background-color: transparent;
      background: center / cover no-repeat url("../assets/plus.svg");
      transition: transform 0.3s cubic-bezier(0.785, 0.135, 0.15, 0.86);
      cursor: pointer;
    }

    p {
      padding: 1.5rem;
      color: t.$clr-grey;
    }
  </style>
</astro-details>
