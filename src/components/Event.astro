---
import CloudinaryImage from "./CloudinaryImage.astro";

interface Props {
  image: string;
  alt?: string;
  title: string;
  description: string;
  link: string;
  date: Date;
}

const { image, alt, title, description, link, date } = Astro.props;
---

<article class="event">
  {
    link ? (
      <a
        href={link}
        target="_blank"
        rel="noopener noreferrer"
        aria-label="Click to view the event on Facebook."
      />
    ) : null
  }
  <div class="image-container">
    {
      image ? (
        <CloudinaryImage
          src={image}
          alt={alt ? alt : "Image that hopefully represents the media."}
          width={500}
          height={500}
        />
      ) : (
        ""
      )
    }
    <div class="hover-container">
      <div class="arrow"></div>
      <p>View event</p>
    </div>
    <div class="hover-background-container"></div>
  </div>
  <div class="text-container">
    <header>
      {title ? <h3 class="heading">{title}</h3> : null}
    </header>
    {description ? <p>{description}</p> : null}
  </div>
</article>

<style lang="scss">
  @use "../styles/tokens/tokens" as t;

  .event {
    position: relative;
    max-width: 26.25rem; /* Funny number ðŸ˜¯ðŸ’¨*/

    :global(.circle-link-container) {
      position: absolute;
      bottom: 0;
      right: 0;
      transform: translate(15%, 15%);
    }

    &:hover .hover-container {
      opacity: 1;
      transform: translate(0, -100%);
      pointer-events: all;
    }

    .hover-background-container {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      transition: t.$t-main;
    }

    &:hover .hover-background-container {
      background: rgba(0, 0, 0, 0.2);
    }
  }

  a {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 10;
    text-decoration: none;
  }

  .image-container {
    position: relative;
    height: 20rem;
    width: 100%;
    margin-bottom: 2rem;
    border-radius: t.$br-small t.$br-large t.$br-small t.$br-large;
    background-color: t.$clr-tan;
    box-shadow: t.$s-main;
    overflow: hidden;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: top;
      border-radius: inherit;
    }
  }

  header {
    margin-bottom: 0.75rem;

    .heading {
      font-size: 1.25rem;
      font-family: t.$ff-yeseva;
      color: t.$clr-black;
    }
  }

  p {
    font-weight: 300;
    font-family: t.$ff-poppy;
    color: t.$clr-grey;
    font-size: 1rem;
  }

  .hover-container {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: t.$t-main;
    z-index: 2;
    pointer-events: none;

    .arrow {
      width: 4rem;
      height: 4rem;
      border-radius: 100%;
      background: center / 25% no-repeat url("../assets/arrow.svg"),
        center / cover url("../assets/paper-background.webp") t.$clr-tan;
      box-shadow: t.$s-main;
      transform: rotate(180deg);
    }

    p {
      margin-top: 0.75rem;
      font-size: 1rem;
      color: t.$clr-tan;
    }
  }
</style>
